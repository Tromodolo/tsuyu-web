{"version":3,"sources":["components/Button.tsx","components/Input.tsx","components/Login.tsx","components/Navbar.tsx","pages/Contact.tsx","pages/Dashboard.tsx","components/UploadButton.tsx","pages/Home.tsx","Router.tsx","storage.ts","App.tsx","reportWebVitals.ts","index.tsx","state/Request.ts","state/files/file.query.ts","state/user/user.store.ts","state/settings/settings.query.ts","state/user/user.query.ts","state/files/index.ts","state/settings/settings.store.ts","state/files/file.store.ts","state/settings/settings.service.ts","state/files/file.service.ts","state/user/user.service.ts","state/user/user.hooks.ts","state/settings/settings.hooks.ts","state/files/file.hooks.ts","state/settings/index.ts","state/user/index.ts"],"names":["Button","props","className","small","transparent","type","onClick","disabled","isLoading","color","size","text","Input","style","width","label","htmlFor","id","placeholder","onChange","x","target","value","Login","useState","username","setUsername","password","setPassword","email","setEmail","setType","right","top","anchorElement","innerWidth","window","bounding","getBoundingClientRect","bottom","onSubmit","event","preventDefault","userService","login","register","error","val","showRegister","Navbar","useAuthenticationState","isLoggedIn","register_enabled","useSettings","loginButton","useRef","showLoginPopup","setShowLoginPopup","useEffect","to","activePage","ref","current","Contact","href","Dashboard","history","useHistory","navState","setNavState","useFileState","currentPage","totalPages","files","filesLoading","user","oldPassword","setOldPassword","newPassword","setNewPassword","updatePassword","changePassword","new_password","logout","push","console","info","map","original_name","file_size","toFixed","format","Date","created_at","file","navigator","clipboard","writeText","API_URL","name","fileService","getPreviousPage","getNextPage","api_key","copyTokenToClipboard","message","content","UploadButton","display","onUpload","multiple","percentage","shareXTemplate","process","Home","recentlyUploaded","uploadProgress","downloadShareX","template","Headers","Authorization","blob","Blob","JSON","stringify","download","uploadFile","length","reverse","slice","copyToClipboard","split","location","host","Router","path","persistState","include","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","ApiKey","SendRequest","endpoint","method","body","params","a","url","undefined","axios","data","headers","res","axErr","response","Error","status","json","userQuery","subscribe","api","fileQuery","store","files$","select","state","recentlyUploaded$","uploadProgress$","currentPage$","totalPages$","isLoading$","selectLoading","error$","selectError","Query","fileStore","userStore","StoreConfig","idKey","Store","settingsQuery","maxFileSizeBytes$","max_file_size_bytes","registerEnabled$","settingsStore","user$","isLoggedIn$","settingsService","this","setLoading","setError","update","getValue","toString","getFiles","userState","fileState","formData","FormData","append","post","onUploadProgress","prog","Math","round","loaded","total","is_admin","last_update","setIsLoading","setUser","loggedIn","setLoggedIn","subscriptions","it","unsubscribe","registerEnabled","setRegisterEnabled","maxFileSizeBytes","setMaxFileSizeBytes","fetchSettings","setFiles","setRecentlyUploaded","setUploadProgress","setCurrentPage","setTotalPages"],"mappings":"+TA8BeA,EAjBA,SAACC,GACf,IAAIC,EAAY,SAShB,OAPID,EAAME,QACTD,GAAa,iBAEVD,EAAMG,cACTF,GAAa,uBAIb,wBAAQA,UAAS,UAAKA,EAAL,YAAkBD,EAAMC,WAAaG,KAAMJ,EAAMI,KAAMC,QAAS,kCAAML,EAAMK,eAAZ,aAAM,OAAAL,IAAmBM,SAAUN,EAAMO,UAA1H,SACEP,EAAMO,UAAY,cAAC,IAAD,CAAYC,MAAM,UAAUC,KAAM,IAAQT,EAAMU,QCIvDC,G,MAjBD,SAACX,GAEd,OACC,sBAAKY,MAAO,CAACC,MAAO,QAApB,UACEb,EAAMc,OAAS,uBAAOb,UAAU,cAAcc,QAASf,EAAMgB,GAA9C,SAAmDhB,EAAMc,QACzE,uBACCb,UAAU,aACVe,GAAIhB,EAAMgB,GACVZ,KAAMJ,EAAMI,KACZa,YAAajB,EAAMiB,YACnBC,SAAU,SAACC,GAAD,OAAOnB,EAAMkB,SAAWlB,EAAMkB,SAASC,EAAEC,OAAOC,OAAS,MACnEf,SAAUN,EAAMM,gBC4CLgB,G,MAtDD,SAACtB,GAAuB,IAAD,EACJuB,mBAAS,IADL,mBAC7BC,EAD6B,KACnBC,EADmB,OAEJF,mBAAS,IAFL,mBAE7BG,EAF6B,KAEnBC,EAFmB,OAGVJ,mBAAS,IAHC,mBAG7BK,EAH6B,KAGtBC,EAHsB,OAIZN,mBAAgC,SAJpB,mBAI7BnB,EAJ6B,KAIvB0B,EAJuB,KAMhCC,EAAQ,EACRC,EAAM,EAEV,GAAIhC,EAAMiC,cAAc,CAAC,IAChBC,EAAeC,OAAfD,WACFE,EAAWpC,EAAMiC,cAAcI,wBACrCN,EAAQG,EAAaE,EAASL,MAAQ,GACtCC,EAAMI,EAASE,OAAS,GAsBzB,OACC,uBAAMrC,UAAU,cAAcW,MAAO,CAACmB,QAAOC,OAAMO,SApBpC,SAACC,GACZxC,EAAMO,YAGL,OAALiC,QAAK,IAALA,KAAOC,iBACM,UAATrC,EACHsC,cAAYC,MAAM,CACjBnB,WACAE,aAGDgB,cAAYE,SAAS,CACpBpB,WACAE,WACAE,YAMF,UACC,qBAAK3B,UAAU,gBACf,uBAAOA,UAAU,cAAjB,SAAgCD,EAAM6C,QACtC,cAAC,EAAD,CAAO7B,GAAI,WAAYC,YAAa,WAAYC,SAAU,SAAC4B,GAAD,OAASrB,EAAYqB,MAC/E,cAAC,EAAD,CAAO9B,GAAI,WAAYC,YAAa,WAAYb,KAAM,WAAYc,SAAU,SAAC4B,GAAD,OAASnB,EAAYmB,MACvF,aAAT1C,EACE,cAAC,EAAD,CAAOY,GAAI,QAASC,YAAa,QAASb,KAAM,QAASc,SAAU,SAAC4B,GAAD,OAASjB,EAASiB,MACrF,KAEH,sBAAK7C,UAAU,gBAAf,UACED,EAAM+C,cAAyB,UAAT3C,GAAoB,cAAC,EAAD,CAAQA,KAAM,SAAUC,QAAS,kBAAMyB,EAAQ,aAAa5B,OAAO,EAAMC,aAAa,EAAMO,KAAM,mBAC5IV,EAAM+C,cAAyB,aAAT3C,GAAuB,cAAC,EAAD,CAAQA,KAAM,SAAUC,QAAS,kBAAMyB,EAAQ,UAAU5B,OAAO,EAAMC,aAAa,EAAMO,KAAM,6BAC7I,cAAC,EAAD,CAAQA,KAAe,UAATN,EAAmB,SAAW,WAAYG,UAAWP,EAAMO,oBCnB9DyC,G,MA/BA,SAAChD,GAAwB,IAAD,EACGiD,mCAAjCC,EAD8B,EAC9BA,WAAYL,EADkB,EAClBA,MAAOtC,EADW,EACXA,UACnB4C,EAAqBC,wBAArBD,iBACFE,EAAcC,mBAHkB,EAIM/B,oBAAS,GAJf,mBAI/BgC,EAJ+B,KAIfC,EAJe,KAUtC,OAJAC,qBAAU,WACTD,GAAkB,KAChB,CAACN,IAGH,sBAAKjD,UAAU,UAAf,UACC,yBAASA,UAAU,YAAnB,SACC,oBAAIA,UAAU,OAAd,qBAED,0BAASA,UAAU,UAAnB,UACC,cAAC,IAAD,CAAMyD,GAAG,GAAGzD,UAAiC,SAAtBD,EAAM2D,WAAyB,kBAAoB,WAA1E,kBACA,cAAC,IAAD,CAAMD,GAAG,UAAWzD,UAAiC,YAAtBD,EAAM2D,WAA4B,kBAAoB,WAArF,qBACCT,EACA,cAAC,IAAD,CAAMQ,GAAG,YAAazD,UAAiC,cAAtBD,EAAM2D,WAA8B,kBAAoB,WAAzF,uBAEA,wBAAQ1D,UAAU,WAAWI,QAAS,kBAAMmD,GAAmBD,IAAiBK,IAAK,SAACzC,GAAD,OAAOkC,EAAYQ,QAAU1C,GAAlH,uBAGDoC,EACA,cAAC,EAAD,CAAOtB,cAAeoB,EAAYQ,QAASd,aAAcI,EAAkBN,MAAOA,EAAOtC,UAAWA,IAClG,UChBSuD,G,OAlBC,WACf,OACC,mCACC,yBAAS7D,UAAU,QAAQe,GAAG,UAA9B,SACC,0BAASf,UAAU,UAAnB,UACC,oBAAIA,UAAU,gBAAd,qBACA,oBAAGA,UAAU,eAAb,8EACkE,mBAAG8D,KAAK,mCAAmC9D,UAAU,OAArD,uBAElE,oBAAGA,UAAU,eAAb,+EACmE,mBAAG8D,KAAK,mCAAmC9D,UAAU,OAArD,mBADnE,qBAC0J,mBAAG8D,KAAK,gCAAgC9D,UAAU,OAAlD,yC,kDCqHhJ+D,EArHG,WACjB,IAAMC,EAAUC,cADO,EAES3C,mBAAS,SAFlB,mBAEhB4C,EAFgB,KAENC,EAFM,OAG6CC,yBAA5DC,EAHe,EAGfA,YAAaC,EAHE,EAGFA,WAAYC,EAHV,EAGUA,MAAkBC,EAH5B,EAGiBlE,UAHjB,EAIC0C,mCAAhByB,EAJe,EAIfA,KAAM7B,EAJS,EAITA,MAJS,EAMetB,mBAAS,IANxB,mBAMhBoD,EANgB,KAMHC,EANG,OAOerD,mBAAS,IAPxB,mBAOhBsD,EAPgB,KAOHC,EAPG,KAiBjBC,EAAiB,WACtBrC,cAAYsC,eAAe,CAC1BtD,SAAUiD,EACVM,aAAcJ,KAiFhB,OACC,mCACC,0BAAS5E,UAAU,QAAQe,GAAG,YAA9B,UACC,sBAAKf,UAAU,iBAAf,UACC,wBAAQA,UAAU,YAAYI,QAAS,kBAAM+D,EAAY,UAAzD,mBACA,wBAAQnE,UAAU,YAAYI,QAAS,kBAAM+D,EAAY,YAAzD,qBACA,wBAAQnE,UAAU,YAAYI,QAZjB,WAChBqC,cAAYwC,SACZjB,EAAQkB,KAAK,QACbC,QAAQC,KAAK,eASV,wBAED,yBAASpF,UAAU,oBAAnB,SArFa,WAAO,IAAD,EACrB,OAAQkE,GACP,IAAK,QACJ,OACC,yBAASlE,UAAU,kBAAnB,SACEwE,EACA,qBAAKxE,UAAU,UAAf,SACC,cAAC,eAAD,CAAcO,MAAO,cAGvB,qCACC,0BAASP,UAAU,aAAnB,UACC,sBAAKA,UAAU,eAAf,UACC,sBAAMA,UAAU,cAAhB,gCACA,sBAAMA,UAAU,cAAhB,kBACA,sBAAMA,UAAU,cAAhB,2BACA,sBAAMA,UAAU,cAAhB,qBAED,qBAAKA,UAAU,gBAAf,SACEuE,EAAMc,KAAI,SAACnE,GACX,OACC,sBAAKlB,UAAU,YAAf,UACC,qBAAKA,UAAU,WAAf,SACEkB,EAAEoE,gBAEJ,qBAAKtF,UAAU,WAAf,SACC,+BAAOkB,EAAEqE,UAAY,IAAd,WAAyBrE,EAAEqE,UAAY,KAAMC,QAAQ,GAArD,iBAAkEtE,EAAEqE,UAApE,WAER,qBAAKvF,UAAU,WAAf,SACC,+BAAOyF,YAAO,IAAIC,KAAKxE,EAAEyE,YAAa,wBAEvC,cAAC,EAAD,CAAQ3F,UAAU,WAAWC,OAAO,EAAMC,aAAa,EAAMO,KAAM,OAAQL,QAAS,kBA9CnEwF,EA8C4F1E,OA7CvH2E,UAAUC,UAAUC,UAApB,UAAiCC,IAAjC,YAA4CJ,EAAKK,OADvB,IAACL,OAoCc1E,EAAEH,YAgBtC,sBAAKf,UAAU,YAAf,UACC,wBAAQA,UAAWqE,GAAe,EAAI,WAAa,GAAIhE,SAAUgE,GAAe,EAAIjE,QAAS,kBAAM8F,cAAYC,mBAA/G,SACC,cAAC,IAAD,CAAa5F,MAAO8D,GAAe,EAAI,UAAY,UAAW7D,KAAM,OAFtE,QAIO6D,EAJP,IAIqBC,EACpB,wBAAQtE,UAAWqE,GAAeC,EAAa,WAAa,GAAIjE,SAAUgE,GAAeC,EAAYlE,QAAS,kBAAM8F,cAAYE,eAAhI,SACC,cAAC,IAAD,CAAc7F,MAAO8D,GAAeC,EAAa,UAAY,UAAW9D,KAAM,eAOpF,IAAK,UACJ,OACC,0BAASR,UAAU,oBAAnB,UACC,cAAC,EAAD,CAAOK,UAAU,EAAMU,GAAI,WAAYC,YAAW,OAAEyD,QAAF,IAAEA,OAAF,EAAEA,EAAMlD,SAAUV,MAAO,aAC3E,cAAC,EAAD,CAAOR,UAAU,EAAMU,GAAI,QAASC,YAAW,iBAAEyD,QAAF,IAAEA,OAAF,EAAEA,EAAM9C,aAAR,QAAiB,GAAId,MAAO,UAC3E,sBAAKb,UAAU,cAAf,UACC,cAAC,EAAD,CAAOK,UAAU,EAAMU,GAAI,QAASC,YAAW,OAAEyD,QAAF,IAAEA,OAAF,EAAEA,EAAM4B,QAASxF,MAAO,cACvE,cAAC,EAAD,CAAQJ,KAAM,OAAQT,UAAU,aAAaI,QAAS,kBApE/B,WAAO,IAAD,EAClCyF,UAAUC,UAAUC,UAApB,iBAA8BtB,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAM4B,eAApC,QAA+C,IAmEkBC,SAE7D,uBAAMtG,UAAU,kBAAkBsC,SAAU,kBAAMwC,KAAlD,UACC,uBAAO9E,UAAU,wBAAjB,SAA0C4C,IAC1C,uBAAO5C,UAAU,0BAAjB,gBAA4CyE,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAM8B,UAClD,cAAC,EAAD,CAAOxF,GAAI,UAAWF,MAAO,eAAgBV,KAAM,WAAYc,SAAU,SAAC4B,GAAD,OAAiB8B,EAAe9B,MACzG,cAAC,EAAD,CAAO9B,GAAI,UAAWF,MAAO,eAAgBV,KAAM,WAAYc,SAAU,SAAC4B,GAAD,OAAiBgC,EAAehC,MACzG,cAAC,EAAD,CAAQpC,KAAM,kBAAmBN,KAAK,SAASC,QAAS,kBAAM0E,cAsB/D0B,W,gBCvGSC,G,OAZM,SAAC1G,GAA8B,IAAD,EAClD,OACC,sBAAKC,UAAU,wBAAf,UACC,uBAAOG,KAAK,OAAOY,GAAG,gBAAgBkF,KAAK,QAAQtF,MAAO,CAAC+F,QAAS,QAASzF,SAAU,SAACC,GAAD,yBAAOnB,EAAM4G,gBAAb,aAAO,OAAA5G,EAAK,UAAYmB,EAAEC,OAAOoD,aAArB,aAAY,EAAiB,KAAKqC,UAAU,EAAOvG,SAA+B,IAArBN,EAAM8G,aACtK,+CAAO/F,QAAQ,gBAAgBC,GAAG,eAAef,UAAU,gBAAmB,CAAC,SAAY,SAA3F,+CAGA,qBAAKA,UAAU,kBAAkBW,MAAO,CAACC,MAAM,GAAD,iBAAKb,EAAM8G,kBAAX,QAAyB,EAAzB,a,iBCN3CC,G,OAAiB,CACtB,QAAW,MACX,KAAQ,QACR,gBAAmB,4CACnB,cAAiB,OACjB,WAAa,GAAb,OAAiBC,oBAAjB,WACA,QAAW,CACT,cAAiB,gBAEnB,KAAQ,oBACR,aAAgB,OAChB,IAAO,eAgFOC,EA7EF,WAAO,IAAD,EACWhE,mCAArBC,EADU,EACVA,WAAYwB,EADF,EACEA,KADF,EAE2BL,yBAArC6C,EAFU,EAEVA,iBAAkBC,EAFR,EAEQA,eAEpBC,EAAiB,WACtB,IACkB,EADZC,EAAQ,eAAON,IACrB,OAAIrC,QAAJ,IAAIA,OAAJ,EAAIA,EAAM4B,WACTe,EAASC,QAAQC,cAAjB,iBAAiC7C,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAM4B,eAAvC,QAAkD,IAEnD,IAAMkB,EAAO,IAAIC,KAAK,CAACC,KAAKC,UAAUN,EAAU,KAAM,IAAK,CAACjH,KAAO,qBACnEwH,IAASJ,EAAM,aAAc,qBAOxBZ,EAAW,SAACf,GACZA,GAGLM,cAAY0B,WAAWhC,IAmCxB,OACC,mCACC,0BAAS5F,UAAU,QAAQe,GAAG,OAA9B,UACC,0BAASf,UAAU,OAAnB,UACC,oBAAIA,UAAU,QAAd,mBACA,oBAAIA,UAAU,WAAd,0BACA,mBAAGA,UAAU,cAAb,oEAMD,yBAASA,UAAU,eAAnB,SA3CGiD,EAYJ,qCACC,cAAC,EAAD,CAAc0D,SAAUA,EAAUE,WAAYK,KAC5B,OAAhBD,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBY,QAAS,GAAM,yDAClC,YAAIZ,GAAkBa,UAAUC,MAAM,EAAG,GAAG1C,KAAI,SAACnE,GACjD,OACC,sBAAalB,UAAU,cAAvB,UACC,cAAC,EAAD,CAAQS,KAAM,WAAYL,QAAS,kBA9BjB,SAACc,GACxB2E,UAAUC,UAAUC,UAAU7E,GA6BgB8G,CAAgB9G,IAAIjB,OAAO,IACpE,+BAAOiB,EAAE+G,MAAF,UAAW/F,OAAOgG,SAASC,KAA3B,MAAoC,OAFlCjH,MAMZ,sBAAKlB,UAAU,sBAAf,UACC,cAAC,EAAD,CAAQS,KAAK,SAAST,UAAU,gBAAgBI,QAAS,kBAAM8B,OAAOgG,SAASpE,KAAO,wCACtF,cAAC,EAAD,CAAQrD,KAAK,gBAAgBT,UAAU,gBAAgBI,QAAS,kBAAM+G,aAvBvE,mCACC,sBAAKnH,UAAU,2BAAf,UACC,cAAC,EAAD,CAAQS,KAAK,SAAST,UAAU,gBAAgBI,QAAS,kBAAM8B,OAAOgG,SAASpE,KAAO,wCACtF,cAAC,EAAD,CAAQrD,KAAK,gBAAgBT,UAAU,gBAAgBI,QAAS,kBAAM+G,cAyCxE,mBAAGnH,UAAU,UAAU8D,KAAK,6CAA5B,oCCnDWsE,EA/BA,WAAO,IACbnF,EAAeD,mCAAfC,WAER,OACC,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOoF,KAAK,WAAZ,SACC,uBAAMrI,UAAU,UAAhB,UACC,cAAC,EAAD,CAAQ0D,WAAW,YACnB,cAAC,EAAD,SAGDT,EACA,cAAC,IAAD,CAAOoF,KAAK,aAAZ,SACC,uBAAMrI,UAAU,UAAhB,UACC,cAAC,EAAD,CAAQ0D,WAAW,cACnB,cAAC,EAAD,SAGC,KACJ,cAAC,IAAD,CAAO2E,KAAK,IAAZ,SACC,uBAAMrI,UAAU,UAAhB,UACC,cAAC,EAAD,CAAQ0D,WAAW,SACnB,cAAC,EAAD,e,QChCL4E,YAAa,CACZC,QAAS,CAAC,UCQGC,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,gKCbazC,EAAUe,oBACnBwC,EAA6B,GAoB1B,SAAeC,EAAtB,wC,4CAAO,WACNC,EACAC,EACAC,EACAC,GAJM,2BAAAC,EAAA,sDAON,GADIC,EANE,UAMO9D,EANP,YAMkByD,QACTM,IAAXH,EAAsB,CAAC,EAAD,YACPA,GADO,IACzB,2BAAW/G,EAAe,QACzBiH,GAAG,WAAQjH,GAFa,+BAPpB,yBAeOmH,IAAM,CACjBN,SACAI,MACAG,KAAMN,EACNO,QAAS,CACR,eAAgB,mBAChB,wBAAiBX,SAAjB,QAA2B,MArBxB,OAeLY,EAfK,4DAyBCC,EAzBD,MA0BKC,SA1BL,iBA2BJF,EAAMC,EAAMC,SA3BR,8BA6BE,IAAIC,MAAM,kBA7BZ,WAiCa,MAAfH,EAAII,OAjCF,0CAkCE,CACNA,OAAQ,IACRC,KAAML,EAAIF,OApCN,iCAuCE,CACNM,OAAQJ,EAAII,OACZC,KAAML,EAAIF,KACVrH,MAAOuH,EAAIF,OA1CP,0D,sBAnBPQ,YAAUpE,QAAQqE,WAAU,SAACC,GAC5BpB,EAASoB,M,6GCaGC,EAAY,IAfzB,kDAUC,WAAsBC,GAAmB,IAAD,8BACvC,cAAMA,IADeA,QAAkB,EATxCC,OAAS,EAAKC,QAAO,SAACC,GAAD,OAAWA,EAAMzG,SASE,EARxC0G,kBAAoB,EAAKF,QAAO,SAACC,GAAD,OAAWA,EAAM/D,oBAQT,EAPxCiE,gBAAkB,EAAKH,QAAO,SAACC,GAAD,OAAWA,EAAM9D,kBAOP,EANxCiE,aAAe,EAAKJ,QAAO,SAACC,GAAD,OAAWA,EAAM3G,eAMJ,EALxC+G,YAAc,EAAKL,QAAO,SAACC,GAAD,OAAWA,EAAM1G,cAKH,EAHxC+G,WAAa,EAAKC,gBAGsB,EAFxCC,OAAS,EAAKC,cAE0B,EAVzC,UAA+BC,KAeN,CAAcC,M,uGCJ1BC,EAAY,IAVxBC,YAAY,CACZ3F,KAAM,OACN4F,MAAO,OAER,qDACC,aAAe,uCAPkB,IAMlC,UAA+BC,OAA/B,I,6GCOaC,EAAgB,IAZ7B,kDAOC,WAAsBlB,GAAuB,IAAD,8BAC3C,cAAMA,IADeA,QAAsB,EAN5CmB,kBAAoB,EAAKjB,QAAO,SAACC,GAAD,OAAWA,EAAMiB,uBAML,EAL5CC,iBAAmB,EAAKnB,QAAO,SAACC,GAAD,OAAWA,EAAM9H,oBAKJ,EAH5CmI,WAAa,EAAKC,gBAG0B,EAF5CC,OAAS,EAAKC,cAE8B,EAP7C,UAAmCC,KAYN,CAAkBU,M,6GCClC1B,EAAY,IAbzB,kDAQC,WAAsBI,GAAmB,IAAD,8BACvC,cAAMA,IADeA,QAAkB,EAPxCuB,MAAQ,EAAKrB,SAO2B,EANxCsB,YAAc,EAAKtB,QAAO,SAACC,GAAD,QAAaA,EAAM3E,WAML,EALxCA,QAAU,EAAK0E,QAAO,SAACC,GAAD,OAAWA,EAAM3E,WAKC,EAHxCgF,WAAa,EAAKC,gBAGsB,EAFxCC,OAAS,EAAKC,cAE0B,EARzC,UAA+BC,KAaN,CAAcE,M,gCCjBvC,6S,uGCeaQ,EAAgB,IAV5BP,YAAY,CACZ3F,KAAM,WACN4F,MAAO,OAER,qDACC,aAAe,uCAPkB,IAMlC,UAAmCC,OAAnC,I,uGCUaJ,EAAY,IAVxBE,YAAY,CACZ3F,KAAM,QACN4F,MAAO,OAER,qDACC,aAAe,uCAX6B,CAC5CxH,YAAa,EACbC,WAAY,EACZC,MAAO,KAOR,UAA+BuH,OAA/B,I,qICSaQ,EAAkB,IAlB/B,WACC,WAAoBzB,GAAuB,yBAAvBA,QADrB,mLAIE0B,KAAK1B,MAAM2B,YAAW,GACtBD,KAAK1B,MAAM4B,SAAS,IALtB,SAOoBjD,YAAsB,WAAY,OAPtD,OAQqB,OADbW,EAPR,QAQUI,OACPgC,KAAK1B,MAAM6B,OAAX,eAAsBvC,EAAIK,OAE1B+B,KAAK1B,MAAM4B,SAAS,iCAGrBF,KAAK1B,MAAM2B,YAAW,GAdxB,6GAkB+B,CAAoBL,M,8JCuFtCjG,EAAc,IAtG3B,WACC,WAAoB2E,EAA0Bc,GAAuB,yBAAjDd,QAAgD,KAAtBc,YAD/C,gLAIEY,KAAK1B,MAAM2B,YAAW,GACtBD,KAAK1B,MAAM4B,SAAS,IAEdzB,EAAmBuB,KAAK1B,MAAM8B,WAPtC,kBAUqBnD,YAAqB,YAAa,WAAOO,EAAW,CAACiB,EAAM3G,YAAYuI,aAV5F,OAWsB,OADbzC,EAVT,QAWWI,OACPgC,KAAK1B,MAAM6B,OAAO,CACjBnI,MAAO4F,EAAIK,OAGZ+B,KAAK1B,MAAM4B,SAAStC,EAAIvH,OAhB5B,kDAmBG2J,KAAK1B,MAAM4B,SAAS,KAAElG,SAnBzB,QAsBEgG,KAAK1B,MAAM2B,YAAW,GAtBxB,0QA0BQxB,EAAmBuB,KAAK1B,MAAM8B,YAC1BtI,aAAe2G,EAAM1G,YA3BjC,wDA8BEiI,KAAK1B,MAAM6B,OAAO,CACjBrI,YAAa2G,EAAM3G,YAAc,IA/BpC,SAiCQkI,KAAKM,WAjCb,oQAqCQ7B,EAAmBuB,KAAK1B,MAAM8B,YAC1BtI,aAAe,GAtC3B,wDAyCEkI,KAAK1B,MAAM6B,OAAO,CACjBrI,YAAa2G,EAAM3G,YAAc,IA1CpC,SA4CQkI,KAAKM,WA5Cb,gLA+CkBjH,GA/ClB,+FAgDE2G,KAAK1B,MAAM2B,YAAW,GACtBD,KAAK1B,MAAM4B,SAAS,IACdK,EAAYP,KAAKZ,UAAUgB,WAC3BI,EAAYR,KAAK1B,MAAM8B,WAnD/B,mBAwDQK,EAAW,IAAIC,UACVC,OAAO,OAAQtH,GAzD5B,UA2DgBoE,IAAMmD,KAAN,UACRnH,IADQ,gBAEXgH,EACA,CACC9C,QAAS,CACR,eAAgB,sBAChB,cAAiB4C,EAAUzG,SAE5B+G,iBAAkB,SAACC,GAClB,IAAMxG,EAAayG,KAAKC,MAAMF,EAAKG,OAASH,EAAKI,MAAQ,KACzD,EAAK5C,MAAM6B,OAAO,CACjBxF,eAAgBL,OAtExB,QA2DIsD,EA3DJ,8DA4EUC,EA5EV,MA6EcC,SA7Ed,iBA8EKF,EAAMC,EAAMC,SA9EjB,8BAgFW,IAAIC,MAAM,kBAhFrB,QAmFsB,MAAfH,EAAII,OACPgC,KAAK1B,MAAM6B,OAAO,CACjBxF,eAAgB,EAChBD,iBAAiB,GAAD,6BACX8F,EAAU9F,wBADC,QACmB,IADnB,CAEfkD,EAAIF,SAINsC,KAAK1B,MAAM4B,SAAStC,EAAIF,MA5F5B,kDA+FGsC,KAAK1B,MAAM4B,SAAS,KAAElG,SA/FzB,QAkGEgG,KAAK1B,MAAM2B,YAAW,GAlGxB,+HAsG2B,CAAgBd,IAAWC,M,2KC7BzClJ,EAAc,IA5E3B,WACC,WAAoBoI,GAAmB,yBAAnBA,QADrB,2FAGaZ,GAHb,8EAIEsC,KAAK1B,MAAM2B,YAAW,GACtBD,KAAK1B,MAAM4B,SAAS,IACpBF,KAAK1B,MAAM6B,OAAO,CAACnG,aAASwD,IAN9B,kBASqBP,YAAkB,aAAc,OAAQS,GAT7D,OAUsB,OADbE,EATT,QAUWI,OACPgC,KAAK1B,MAAM6B,OAAX,eAAsBvC,EAAIK,OAE1B+B,KAAK1B,MAAM4B,SAAS,iCAbxB,kDAgBGF,KAAK1B,MAAM4B,SAAS,KAAElG,SAhBzB,QAmBEgG,KAAK1B,MAAM2B,YAAW,GAnBxB,yLAsBgBvC,GAtBhB,8EAuBEsC,KAAK1B,MAAM2B,YAAW,GACtBD,KAAK1B,MAAM4B,SAAS,IAxBtB,kBA2BqBjD,YAAkB,gBAAiB,OAAQS,GA3BhE,OA4BsB,OADbE,EA3BT,QA4BWI,OACPgC,KAAK1B,MAAM6B,OAAX,eAAsBvC,EAAIK,OAE1B+B,KAAK1B,MAAM4B,SAAStC,EAAIvH,OA/B5B,gDAkCG2J,KAAK1B,MAAM4B,SAAS,KAAElG,SAlCzB,QAqCEgG,KAAK1B,MAAM2B,YAAW,GArCxB,+IAyCED,KAAK1B,MAAM6B,OAAO,CACjB3L,QAAIgJ,EACJxI,cAAUwI,EACVpI,WAAOoI,EACP1D,aAAS0D,EACT2D,cAAU3D,EACV4D,iBAAa5D,EACbpE,gBAAYoE,EACZxD,aAASwD,MAjDZ,8EAqDsBE,GArDtB,gFAsDEsC,KAAK1B,MAAM2B,YAAW,GACtBD,KAAK1B,MAAM4B,SAAS,IACpBF,KAAK1B,MAAM6B,OAAO,CAACnG,aAASwD,IACtBiB,EAAQuB,KAAK1B,MAAM8B,WAzD3B,kBA4DqBnD,YAA4B,uBAAwB,OAAQS,EAAM,CAACe,EAAMjK,GAAG6L,aA5DjG,OA6DsB,OADbzC,EA5DT,QA6DWI,OACPgC,KAAK1B,MAAM6B,OAAO,CACjBnG,QAAS,kCAGVgG,KAAK1B,MAAM4B,SAAStC,EAAIvH,OAlE5B,kDAqEG2J,KAAK1B,MAAM4B,SAAS,KAAElG,SArEzB,QAwEEgG,KAAK1B,MAAM2B,YAAW,GAxExB,wHA4E2B,CAAgBb,M,4FC5E9B3I,EAAyB,WAKhC,IAAD,EAC8B1B,oBAAS,GADvC,mBACGhB,EADH,KACcsN,EADd,OAEsBtM,mBAAS,IAF/B,mBAEGsB,EAFH,KAEU6J,EAFV,OAGoBnL,qBAHpB,mBAGGmD,EAHH,KAGSoJ,EAHT,OAI4BvM,oBAAkB,GAJ9C,mBAIGwM,EAJH,KAIaC,EAJb,KAmBJ,OAbAvK,qBAAU,WACT,IAAMwK,EAAuB,CAC5BvD,IAAUY,WAAWX,WAAU,SAACxJ,GAAD,OAAO0M,EAAa1M,MACnDuJ,IAAUc,OAAOb,WAAU,SAACxJ,GAAD,OAAOuL,EAASvL,MAC3CuJ,IAAU2B,MAAM1B,WAAU,SAACxJ,GAAD,OAAO2M,EAAQ3M,MACzCuJ,IAAU4B,YAAY3B,WAAU,SAACxJ,GAAD,OAAO6M,EAAY7M,OAGpD,OAAO,WACN8M,EAAc3I,KAAI,SAAC4I,GAAD,OAAQA,EAAGC,oBAE5B,IAEI,CACNjL,WAAY6K,EACZrJ,OACA7B,QACAtC,e,oGC5BW6C,EAAc,WAKrB,IAAD,EAC8B7B,oBAAS,GADvC,mBACGhB,EADH,KACcsN,EADd,OAEsBtM,mBAAS,IAF/B,mBAEGsB,EAFH,KAEU6J,EAFV,OAG0CnL,oBAAkB,GAH5D,mBAGG6M,EAHH,KAGoBC,EAHpB,OAI4C9M,mBAAiB,GAJ7D,mBAIG+M,EAJH,KAIqBC,EAJrB,KAqBJ,OAfA9K,qBAAU,WACT8I,IAAgBiC,gBAEhB,IAAMP,EAAuB,CAC5BjC,IAAcV,WAAWX,WAAU,SAACxJ,GAAD,OAAO0M,EAAa1M,MACvD6K,IAAcR,OAAOb,WAAU,SAACxJ,GAAD,OAAOuL,EAASvL,MAC/C6K,IAAcG,iBAAiBxB,WAAU,SAACxJ,GAAD,OAAOkN,EAAmBlN,MACnE6K,IAAcC,kBAAkBtB,WAAU,SAACxJ,GAAD,OAAOoN,EAAoBpN,OAGtE,OAAO,WACN8M,EAAc3I,KAAI,SAAC4I,GAAD,OAAQA,EAAGC,oBAE5B,IAEI,CACNhL,iBAAkBiL,EAClBlC,oBAAqBoC,EACrBzL,QACAtC,e,8HC5BW8D,EAAe,WAQtB,IACGnB,EAAeD,mCAAfC,WADJ,EAE8B3B,oBAAS,GAFvC,mBAEGhB,EAFH,KAEcsN,EAFd,OAGsBtM,mBAAS,IAH/B,mBAGGsB,EAHH,KAGU6J,EAHV,OAIsBnL,mBAAiB,IAJvC,mBAIGiD,EAJH,KAIUiK,EAJV,OAK4ClN,mBAAmB,IAL/D,mBAKG2F,EALH,KAKqBwH,EALrB,OAMwCnN,mBAAS,GANjD,mBAMG4F,EANH,KAMmBwH,EANnB,OAOkCpN,mBAAiB,GAPnD,mBAOG+C,EAPH,KAOgBsK,EAPhB,OAQgCrN,mBAAiB,GARjD,mBAQGgD,EARH,KAQesK,EARf,KA8BJ,OApBApL,qBAAU,WACLP,GACHiD,IAAY2G,WAGb,IAAMmB,EAAuB,CAC5BpD,IAAUS,WAAWX,WAAU,SAACxJ,GAAD,OAAO0M,EAAa1M,MACnD0J,IAAUW,OAAOb,WAAU,SAACxJ,GAAD,OAAOuL,EAASvL,MAC3C0J,IAAUE,OAAOJ,WAAU,SAACxJ,GAAD,OAAOsN,EAAQ,OAACtN,QAAD,IAACA,IAAK,OAChD0J,IAAUK,kBAAkBP,WAAU,SAACxJ,GAAD,OAAOuN,EAAmB,OAACvN,QAAD,IAACA,IAAK,OACtE0J,IAAUM,gBAAgBR,WAAU,SAACxJ,GAAD,OAAOwN,EAAiB,OAACxN,QAAD,IAACA,IAAK,MAClE0J,IAAUO,aAAaT,WAAU,SAACxJ,GAAD,OAAOyN,EAAezN,MACvD0J,IAAUQ,YAAYV,WAAU,SAACxJ,GAAD,OAAO0N,EAAc1N,OAGtD,OAAO,WACN8M,EAAc3I,KAAI,SAAC4I,GAAD,OAAQA,EAAGC,oBAE5B,CAACjL,IAEG,CACNL,QACAtC,YACAiE,QACA0C,mBACAC,iBACA7C,cACAC,gB,gCCnDF,uK,oDCAA,+c","file":"static/js/main.3596a554.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Button.scss\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\ninterface ButtonProps {\r\n\tclassName?: string;\r\n\ttext: string;\r\n\tonClick?: () => void;\r\n\tisLoading?: boolean;\r\n\tsmall?: boolean;\r\n\ttransparent?: boolean;\r\n\ttype?: \"button\" | \"submit\" | \"reset\";\r\n}\r\n\r\nconst Button = (props: ButtonProps) => {\r\n\tlet className = \"button\";\r\n\r\n\tif (props.small) {\r\n\t\tclassName += \" button-small\";\r\n\t}\r\n\tif (props.transparent) {\r\n\t\tclassName += \" button-transparent\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<button className={`${className} ${props.className}`} type={props.type} onClick={() => props.onClick?.()} disabled={props.isLoading}>\r\n\t\t\t{props.isLoading ? <BeatLoader color=\"#000000\" size={8} /> : props.text}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Button;","import React from \"react\";\r\nimport \"./Input.scss\";\r\n\r\ninterface InputProps {\r\n\tid: string;\r\n\tplaceholder?: string;\r\n\tlabel?: string;\r\n\ttype?: \"text\" | \"password\" | \"number\" | \"email\",\r\n\tonChange?: (val: string) => void,\r\n\tdisabled?: boolean;\r\n}\r\n\r\nconst Input = (props: InputProps) => {\r\n\t\r\n\treturn (\r\n\t\t<div style={{width: \"100%\"}}>\r\n\t\t\t{props.label && <label className=\"input-label\" htmlFor={props.id}>{props.label}</label>}\r\n\t\t\t<input \r\n\t\t\t\tclassName=\"text-input\"\r\n\t\t\t\tid={props.id}\r\n\t\t\t\ttype={props.type}\r\n\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\tonChange={(x) => props.onChange ? props.onChange(x.target.value) : null} \r\n\t\t\t\tdisabled={props.disabled}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;","import React, { FormEvent, useState } from \"react\";\r\nimport { useAuthenticationState, userService } from \"../state/user\";\r\nimport Button from \"./Button\";\r\nimport Input from \"./Input\";\r\nimport \"./Login.scss\";\r\n\r\ninterface LoginProps {\r\n\tanchorElement?: HTMLButtonElement | null;\r\n\tshowRegister?: boolean;\r\n\tisLoading?: boolean;\r\n\terror?: string;\r\n}\r\n\r\nconst Login = (props: LoginProps) => {\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [type, setType] = useState<\"login\" | \"register\"> (\"login\");\r\n\r\n\tlet right = 0;\r\n\tlet top = 0;\r\n\r\n\tif (props.anchorElement){\r\n\t\tconst { innerWidth } = window;\r\n\t\tconst bounding = props.anchorElement.getBoundingClientRect();\r\n\t\tright = innerWidth - bounding.right + 20;\r\n\t\ttop = bounding.bottom + 20;\r\n\t}\r\n\r\n\tconst onLogin = (event?: FormEvent) => {\r\n\t\tif (props.isLoading) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tevent?.preventDefault();\r\n\t\tif (type === \"login\") {\r\n\t\t\tuserService.login({ \r\n\t\t\t\tusername, \r\n\t\t\t\tpassword\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tuserService.register({ \r\n\t\t\t\tusername, \r\n\t\t\t\tpassword,\r\n\t\t\t\temail,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"login-popup\" style={{right, top}} onSubmit={onLogin}>\r\n\t\t\t<div className=\"popup-arrow\"></div>\r\n\t\t\t<label className=\"login-error\">{props.error}</label>\r\n\t\t\t<Input id={\"username\"} placeholder={\"Username\"} onChange={(val) => setUsername(val)} />\r\n\t\t\t<Input id={\"password\"} placeholder={\"Password\"} type={\"password\"} onChange={(val) => setPassword(val)} />\r\n\t\t\t{type === \"register\" \r\n\t\t\t\t? <Input id={\"email\"} placeholder={\"Email\"} type={\"email\"} onChange={(val) => setEmail(val)} /> \r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t\t<div className=\"login-buttons\">\r\n\t\t\t\t{props.showRegister && type === \"login\" && <Button type={\"button\"} onClick={() => setType(\"register\")} small={true} transparent={true} text={\"Create account\"}/>}\r\n\t\t\t\t{props.showRegister && type === \"register\" && <Button type={\"button\"} onClick={() => setType(\"login\")} small={true} transparent={true} text={\"Already have an account?\"}/>}\r\n\t\t\t\t<Button text={type === \"login\" ? \"Log In\" : \"Register\"} isLoading={props.isLoading} />\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Login;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSettings } from \"../state/settings\";\r\nimport { useAuthenticationState } from \"../state/user\";\r\nimport Login from \"./Login\";\r\nimport \"./Navbar.scss\";\r\n\r\ninterface NavbarProps {\r\n\tactivePage?: string;\r\n}\r\n\r\nconst Navbar = (props: NavbarProps) => {\r\n\tconst { isLoggedIn, error, isLoading } = useAuthenticationState();\r\n\tconst { register_enabled } = useSettings();\r\n\tconst loginButton = useRef<HTMLButtonElement | null>();\r\n\tconst [showLoginPopup, setShowLoginPopup] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetShowLoginPopup(false);\r\n\t}, [isLoggedIn]);\r\n\r\n\treturn (\r\n\t\t<nav className=\"nav-bar\">\r\n\t\t\t<section className=\"nav-start\">\r\n\t\t\t\t<h3 className=\"name\">tsuyu</h3>\r\n\t\t\t</section>\r\n\t\t\t<section className=\"nav-end\">\r\n\t\t\t\t<Link to=\"\" className={props.activePage  === \"home\" ? \"nav-item active\" : \"nav-item\"}>Home</Link>\r\n\t\t\t\t<Link to=\"contact\"  className={props.activePage  === \"contact\" ? \"nav-item active\" : \"nav-item\"}>Contact</Link>\r\n\t\t\t\t{isLoggedIn ? ( \r\n\t\t\t\t\t<Link to=\"dashboard\"  className={props.activePage  === \"dashboard\" ? \"nav-item active\" : \"nav-item\"}>Dashboard</Link>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button className=\"nav-item\" onClick={() => setShowLoginPopup(!showLoginPopup)} ref={(x) => loginButton.current = x}>Log in</button>\r\n\t\t\t\t)}\r\n\t\t\t</section>\r\n\t\t\t{showLoginPopup ? (\r\n\t\t\t\t<Login anchorElement={loginButton.current} showRegister={register_enabled} error={error} isLoading={isLoading}/>\r\n\t\t\t): null}\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./Contact.scss\";\r\n\r\nconst Contact = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section className=\"route\" id=\"contact\">\r\n\t\t\t\t<section className=\"contact\">\r\n\t\t\t\t\t<h1 className=\"contact-title\">Contact</h1>\r\n\t\t\t\t\t<p className=\"contact-info\">\r\n\t\t\t\t\t\tFor legal notices or takedown requests, please go contact me via <a href=\"mailto:filip.ekstrom98@gmail.com\" className=\"link\">email.</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p className=\"contact-info\">\r\n\t\t\t\t\t\tFor other questions and answers, be sure to contact me either via <a href=\"mailto:filip.ekstrom98@gmail.com\" className=\"link\">email</a> or by joining my <a href=\"https://discord.gg/PhswpNNYTM\" className=\"link\">Discord Server.</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</section>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Contact;","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\r\n\r\nimport \"./Dashboard.scss\"\r\nimport { useAuthenticationState, userService } from \"../state/user\";\r\nimport { File, fileService, useFileState } from \"../state/files\";\r\nimport Button from \"../components/Button\";\r\nimport { format } from \"date-fns\";\r\nimport { API_URL } from \"../state/Request\";\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport Input from \"../components/Input\";\r\n\r\nconst Dashboard = () => {\r\n\tconst history = useHistory();\r\n\tconst [navState, setNavState] = useState(\"files\");\r\n\tconst { currentPage, totalPages, files, isLoading: filesLoading } = useFileState();\r\n\tconst { user, error } = useAuthenticationState();\r\n\r\n\tconst [oldPassword, setOldPassword] = useState(\"\");\r\n\tconst [newPassword, setNewPassword] = useState(\"\");\r\n\r\n\tconst copyUrlToClipboard = (file: File) => {\r\n\t\tnavigator.clipboard.writeText(`${API_URL}/${file.name}`);\r\n\t}\r\n\r\n\tconst copyTokenToClipboard = () => {\r\n\t\tnavigator.clipboard.writeText(user?.api_key ?? \"\");\r\n\t}\r\n\r\n\tconst updatePassword = () => {\r\n\t\tuserService.changePassword({\r\n\t\t\tpassword: oldPassword,\r\n\t\t\tnew_password: newPassword,\r\n\t\t});\r\n\t}\r\n\r\n\tconst content = () => {\r\n\t\tswitch (navState) {\r\n\t\t\tcase \"files\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<section className=\"dashboard-files\">\r\n\t\t\t\t\t\t{filesLoading ? (\r\n\t\t\t\t\t\t\t<div className=\"loading\">\r\n\t\t\t\t\t\t\t\t<BounceLoader color={\"#44E384\"} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<section className=\"file-table\">\r\n\t\t\t\t\t\t\t\t<div className=\"table-header\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"header-name\">Original file name</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"header-size\">Size</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"header-date\">Date uploaded</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"header-link\">Link</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"table-content\">\r\n\t\t\t\t\t\t\t\t\t{files.map((x) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-row\" key={x.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row-name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{x.original_name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row-size\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{x.file_size > 1000 ? `${(x.file_size / 1000).toFixed(2)} MB` : `${x.file_size} KB`}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row-date\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{format(new Date(x.created_at), \"dd MMM HH:mm aaa\")}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button className=\"row-link\" small={true} transparent={true} text={\"Copy\"} onClick={() => copyUrlToClipboard(x)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t<div className=\"table-nav\">\r\n\t\t\t\t\t\t\t\t<button className={currentPage <= 1 ? \"disabled\" : \"\"} disabled={currentPage <= 1 } onClick={() => fileService.getPreviousPage()}>\r\n\t\t\t\t\t\t\t\t\t<FaArrowLeft color={currentPage <= 1 ? \"#5B5C5E\" : \"#DAE1E7\"} size={18} />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\tPage {currentPage}/{totalPages}\r\n\t\t\t\t\t\t\t\t<button className={currentPage >= totalPages ? \"disabled\" : \"\"} disabled={currentPage >= totalPages} onClick={() => fileService.getNextPage()}>\r\n\t\t\t\t\t\t\t\t\t<FaArrowRight color={currentPage >= totalPages ? \"#5B5C5E\" : \"#DAE1E7\"} size={18} />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</section>\r\n\t\t\t\t);\r\n\t\t\tcase \"account\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<section className=\"dashboard-account\">\r\n\t\t\t\t\t\t<Input disabled={true} id={\"username\"} placeholder={user?.username} label={\"Username\"}/>\r\n\t\t\t\t\t\t<Input disabled={true} id={\"email\"} placeholder={user?.email ?? \"\"} label={\"Email\"}/>\r\n\t\t\t\t\t\t<div className=\"token-input\">\r\n\t\t\t\t\t\t\t<Input disabled={true} id={\"token\"} placeholder={user?.api_key} label={\"Api Token\"}/>\r\n\t\t\t\t\t\t\t<Button text={\"Copy\"} className=\"token-copy\" onClick={() => copyTokenToClipboard()}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<form className=\"password-update\" onSubmit={() => updatePassword()}>\r\n\t\t\t\t\t\t\t<label className=\"password-update-error\">{error}</label>\r\n\t\t\t\t\t\t\t<label className=\"password-update-success\">{user?.message}</label>\r\n\t\t\t\t\t\t\t<Input id={\"oldpass\"} label={\"Old password\"} type={\"password\"} onChange={(val: string) => setOldPassword(val)}/>\r\n\t\t\t\t\t\t\t<Input id={\"newpass\"} label={\"New Password\"} type={\"password\"} onChange={(val: string) => setNewPassword(val)}/>\r\n\t\t\t\t\t\t\t<Button text={\"Update password\"} type=\"button\" onClick={() => updatePassword()} />\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onLogout = () => {\r\n\t\tuserService.logout();\r\n\t\thistory.push(\"home\");\r\n\t\tconsole.info(\"Logged out\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section className=\"route\" id=\"dashboard\">\r\n\t\t\t\t<nav className=\"dashboard-menu\">\r\n\t\t\t\t\t<button className=\"menu-item\" onClick={() => setNavState(\"files\")}>Files</button>\r\n\t\t\t\t\t<button className=\"menu-item\" onClick={() => setNavState(\"account\")}>Account</button>\r\n\t\t\t\t\t<button className=\"menu-item\" onClick={onLogout}>Log Out</button>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<section className=\"dashboard-content\">\r\n\t\t\t\t\t{content()}\r\n\t\t\t\t</section>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport \"./UploadButton.scss\";\r\n\r\ninterface UploadButtonProps {\r\n\tpercentage?: number;\r\n\tonUpload?: (file?: File) => void;\r\n}\r\n\r\nconst UploadButton = (props: UploadButtonProps) => {\r\n\treturn (\r\n\t\t<div className=\"upload-button-wrapper\">\r\n\t\t\t<input type=\"file\" id=\"upload-button\" name=\"files\" style={{display: \"none\"}} onChange={(x) => props.onUpload?.(x.target.files?.[0])} multiple={false} disabled={props.percentage !== 0}/>\r\n\t\t\t<label htmlFor=\"upload-button\" id=\"upload-label\" className=\"upload-label\" {...{\"progress\": \"50px\"}}>\r\n\t\t\t\tClick or drag file to upload\r\n\t\t\t</label>\r\n\t\t\t<div className=\"upload-progress\" style={{width: `${props.percentage ?? 0}%`}}></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default UploadButton;","import React from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport UploadButton from \"../components/UploadButton\";\r\nimport { fileService, useFileState } from \"../state/files\";\r\nimport { useAuthenticationState } from \"../state/user\";\r\nimport download from \"downloadjs\";\r\n\r\nimport \"./Home.scss\";\r\n\r\nconst shareXTemplate = {\r\n\t\"Version\": \"1.0\",\r\n\t\"Name\": \"tsuyu\",\r\n\t\"DestinationType\": \"ImageUploader, TextUploader, FileUploader\",\r\n\t\"RequestMethod\": \"POST\",\r\n\t\"RequestURL\": `${process.env.REACT_APP_API_URL}/upload`,\r\n\t\"Headers\": {\r\n\t  \"Authorization\": \"REPLACE_THIS\",\r\n\t},\r\n\t\"Body\": \"MultipartFormData\",\r\n\t\"FileFormName\": \"file\",\r\n\t\"URL\": \"$response$\",\r\n}\r\n\r\nconst Home = () => {\r\n\tconst { isLoggedIn, user } = useAuthenticationState();\r\n\tconst { recentlyUploaded, uploadProgress } = useFileState();\r\n\r\n\tconst downloadShareX = () => {\r\n\t\tconst template = {...shareXTemplate};\r\n\t\tif (user?.api_key){\r\n\t\t\ttemplate.Headers.Authorization = user?.api_key ?? \"\";\r\n\t\t}\r\n\t\tconst blob = new Blob([JSON.stringify(template, null, 2)], {type : 'application/json'});\r\n\t\tdownload(blob, \"tsuyu.sxcu\", \"application/json\");\r\n\t}\r\n\r\n\tconst copyToClipboard = (x: string) => {\r\n\t\tnavigator.clipboard.writeText(x);\r\n\t}\r\n\r\n\tconst onUpload = (file?: File) => {\r\n\t\tif (!file) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfileService.uploadFile(file);\r\n\t};\r\n\r\n\tconst upload = () => {\r\n\t\tif (!isLoggedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"interaction-buttons wide\">\r\n\t\t\t\t\t\t<Button text=\"Github\" className=\"button-github\" onClick={() => window.location.href = \"https://github.com/tromodolo/tsuyu\"} />\r\n\t\t\t\t\t\t<Button text=\"ShareX config\" className=\"button-sharex\" onClick={() => downloadShareX()}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<UploadButton onUpload={onUpload} percentage={uploadProgress} />\r\n\t\t\t\t{(recentlyUploaded?.length > 0) && <h4>Uploaded files (Last 3)</h4>}\r\n\t\t\t\t{[...recentlyUploaded].reverse().slice(0, 3).map((x) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={x} className=\"recent-file\">\r\n\t\t\t\t\t\t\t<Button text={\"Copy URL\"} onClick={() => copyToClipboard(x)} small={true} />\r\n\t\t\t\t\t\t\t<span>{x.split(`${window.location.host}/`)[1]}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<div className=\"interaction-buttons\">\r\n\t\t\t\t\t<Button text=\"Github\" className=\"button-github\" onClick={() => window.location.href = \"https://github.com/tromodolo/tsuyu\"} />\r\n\t\t\t\t\t<Button text=\"ShareX config\" className=\"button-sharex\" onClick={() => downloadShareX()}/>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section className=\"route\" id=\"home\">\r\n\t\t\t\t<section className=\"info\">\r\n\t\t\t\t\t<h1 className=\"title\">tsuyu</h1>\r\n\t\t\t\t\t<h3 className=\"subtitle\">ツユ</h3>\r\n\t\t\t\t\t<p className=\"description\">\r\n\t\t\t\t\t\tFile uploading service lovingly crafted using Rust.\r\n\t\t\t\t\t\t{/* <br />\t\t\t\t\t\t\r\n\t\t\t\t\t\tFast uploads, sharing and file history, but more to come. */}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className=\"interactions\">\r\n\t\t\t\t\t{upload()}\r\n\t\t\t\t</section>\r\n\t\t\t\t<a className=\"credits\" href=\"https://www.pixiv.net/en/artworks/71865345\">Art source: Hang</a>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {\r\n\tBrowserRouter,\r\n\tSwitch,\r\n\tRoute\r\n} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Home from \"./pages/Home\";\r\nimport { useAuthenticationState } from \"./state/user\";\r\n\r\nconst Router = () => {\r\n\tconst { isLoggedIn } = useAuthenticationState();\r\n\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/contact\">\r\n\t\t\t\t\t<main className=\"content\">\r\n\t\t\t\t\t\t<Navbar activePage=\"contact\"></Navbar>\r\n\t\t\t\t\t\t<Contact />\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</Route>\r\n\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t<Route path=\"/dashboard\">\r\n\t\t\t\t\t\t<main className=\"content\">\r\n\t\t\t\t\t\t\t<Navbar activePage=\"dashboard\"></Navbar>\r\n\t\t\t\t\t\t\t<Dashboard />\r\n\t\t\t\t\t\t</main>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t) : null}\r\n\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t<main className=\"content\">\r\n\t\t\t\t\t\t<Navbar activePage=\"home\"></Navbar>\r\n\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default Router;","import { persistState } from \"@datorama/akita\";\r\n\r\nexport const InitPersist = () => {\r\n\tpersistState({\r\n\t\tinclude: [\"user\"],\r\n\t});\r\n};\r\n","import React from 'react';\r\nimport Router from './Router';\r\nimport { InitPersist } from './storage';\r\n\r\nInitPersist();\r\n\r\nfunction App() {\r\n  return (\r\n    <Router></Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { userQuery } from \"./user\";\r\n\r\nexport const API_URL = process.env.REACT_APP_API_URL;\r\nlet ApiKey: string | undefined = \"\";\r\nuserQuery.api_key.subscribe((api) => {\r\n\tApiKey = api;\r\n});\r\n\r\nexport interface ApiResponse<T> {\r\n\tstatus: number;\r\n\tjson?: T;\r\n\terror?: string;\r\n};\r\nexport type Endpoint = \r\n\t| \"file/upload\"\r\n\t| \"settings\"\r\n\t| \"file/delete\"\r\n\t| \"file/list\"\r\n\t| \"user/login\"\r\n\t| \"user/register\"\r\n\t| \"user/reset-token\"\r\n\t| \"user/change-password\";\r\nexport type Method = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\r\nexport async function SendRequest<T>(\r\n\tendpoint: Endpoint,\r\n\tmethod: Method,\r\n\tbody?: { [key: string]: any },\r\n\tparams?: [value: string],\r\n): Promise<ApiResponse<T>> {\r\n\tlet url = `${API_URL}/${endpoint}`;\r\n\tif (params !== undefined) {\r\n\t\tfor (const val of params) {\r\n\t\t\turl += `/${val}`;\r\n\t\t}\r\n\t}\r\n\r\n\tlet res: AxiosResponse;\r\n\ttry {\r\n\t\tres = await axios({\r\n\t\t\tmethod,\r\n\t\t\turl,\r\n\t\t\tdata: body,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\"Authorization\": ApiKey ?? \"\",\r\n\t\t\t}\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tconst axErr: AxiosError = err;\r\n\t\tif (axErr.response){\r\n\t\t\tres = axErr.response;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Request failed\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (res.status === 200){\r\n\t\treturn {\r\n\t\t\tstatus: 200,\r\n\t\t\tjson: res.data,\r\n\t\t}\r\n\t} else {\r\n\t\treturn {\r\n\t\t\tstatus: res.status,\r\n\t\t\tjson: res.data,\r\n\t\t\terror: res.data,\r\n\t\t}\r\n\t}\r\n}","import { Query } from \"@datorama/akita\";\r\nimport { FileState } from \"./file.model\";\r\nimport { fileStore, FileStore } from \"./file.store\";\r\n\r\nexport class FileQuery extends Query<FileState> {\r\n\tfiles$ = this.select((state) => state.files);\r\n\trecentlyUploaded$ = this.select((state) => state.recentlyUploaded);\r\n\tuploadProgress$ = this.select((state) => state.uploadProgress);\r\n\tcurrentPage$ = this.select((state) => state.currentPage);\r\n\ttotalPages$ = this.select((state) => state.totalPages);\r\n\r\n\tisLoading$ = this.selectLoading();\r\n\terror$ = this.selectError();\r\n\r\n\tconstructor(protected store: FileStore) {\r\n\t\tsuper(store);\r\n\t}\r\n}\r\n\r\nexport const fileQuery = new FileQuery(fileStore);\r\n","import { Store, StoreConfig } from \"@datorama/akita\";\r\nimport { User } from \"./user.model\";\r\n\r\nconst CreateInitialState = () => ({});\r\n\r\n@StoreConfig({\r\n\tname: \"user\",\r\n\tidKey: \"_id\",\r\n})\r\nexport class UserStore extends Store<User> {\r\n\tconstructor() {\r\n\t\tsuper(CreateInitialState());\r\n\t}\r\n}\r\n\r\nexport const userStore = new UserStore();\r\n","import { Query } from \"@datorama/akita\";\r\nimport { Settings } from \"./settings.model\";\r\nimport { settingsStore, SettingsStore } from \"./settings.store\";\r\n\r\nexport class SettingsQuery extends Query<Settings> {\r\n\tmaxFileSizeBytes$ = this.select((state) => state.max_file_size_bytes);\r\n\tregisterEnabled$ = this.select((state) => state.register_enabled);\r\n\r\n\tisLoading$ = this.selectLoading();\r\n\terror$ = this.selectError();\r\n\r\n\tconstructor(protected store: SettingsStore) {\r\n\t\tsuper(store);\r\n\t}\r\n}\r\n\r\nexport const settingsQuery = new SettingsQuery(settingsStore);\r\n","import { Query } from \"@datorama/akita\";\r\nimport { User } from \"./user.model\";\r\nimport { UserStore, userStore } from \"./user.store\";\r\n\r\nexport class UserQuery extends Query<User> {\r\n\tuser$ = this.select();\r\n\tisLoggedIn$ = this.select((state) => !!state.api_key);\r\n\tapi_key = this.select((state) => state.api_key);\r\n\r\n\tisLoading$ = this.selectLoading();\r\n\terror$ = this.selectError();\r\n\r\n\tconstructor(protected store: UserStore) {\r\n\t\tsuper(store);\r\n\t}\r\n}\r\n\r\nexport const userQuery = new UserQuery(userStore);\r\n","export * from \"./file.model\";\r\nexport * from \"./file.query\";\r\nexport * from \"./file.service\";\r\nexport * from \"./file.hooks\";\r\nexport { FileStore } from \"./file.store\";","import { Store, StoreConfig } from \"@datorama/akita\";\r\nimport { Settings } from \"./settings.model\";\r\n\r\nconst CreateInitialState = () => ({});\r\n\r\n@StoreConfig({\r\n\tname: \"settings\",\r\n\tidKey: \"_id\",\r\n})\r\nexport class SettingsStore extends Store<Settings> {\r\n\tconstructor() {\r\n\t\tsuper(CreateInitialState());\r\n\t}\r\n}\r\n\r\nexport const settingsStore = new SettingsStore();\r\n","import { Store, StoreConfig } from \"@datorama/akita\";\r\nimport { FileState } from \"./file.model\";\r\n\r\nconst CreateInitialState = (): FileState => ({\r\n\tcurrentPage: 1,\r\n\ttotalPages: 1,\r\n\tfiles: [],\r\n});\r\n\r\n@StoreConfig({\r\n\tname: \"files\",\r\n\tidKey: \"_id\",\r\n})\r\nexport class FileStore extends Store<FileState> {\r\n\tconstructor() {\r\n\t\tsuper(CreateInitialState());\r\n\t}\r\n}\r\n\r\nexport const fileStore = new FileStore();\r\n","import { SendRequest } from \"../Request\";\r\nimport { Settings } from \"./settings.model\";\r\nimport { settingsStore, SettingsStore } from \"./settings.store\";\r\n\r\nexport class SettingsService {\r\n\tconstructor(private store: SettingsStore) {}\r\n\r\n\tasync fetchSettings() {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\r\n\t\tconst res = await SendRequest<Settings>(\"settings\", \"GET\");\r\n\t\tif (res.status === 200){\r\n\t\t\tthis.store.update({...res.json});\r\n\t\t} else {\r\n\t\t\tthis.store.setError(\"Invalid username or password.\");\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n}\r\n\r\nexport const settingsService = new SettingsService(settingsStore);\r\n","import { FileStore, fileStore } from \"./file.store\";\r\nimport { File as IFile, FileCount, FileState } from \"./file.model\";\r\nimport { API_URL, SendRequest } from \"../Request\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { UserStore } from \"../user\";\r\nimport { userStore } from \"../user/user.store\";\r\n\r\nexport class FileService {\r\n\tconstructor(private store: FileStore, private userStore: UserStore) {}\r\n\r\n\tasync getFiles() {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\r\n\t\tconst state: FileState = this.store.getValue();\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await SendRequest<IFile[]>(\"file/list\", \"GET\", undefined, [state.currentPage.toString()]);\r\n\t\t\tif (res.status === 200){\r\n\t\t\t\tthis.store.update({\r\n\t\t\t\t\tfiles: res.json,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.store.setError(res.error);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.store.setError(e.message);\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n\r\n\tasync getNextPage() {\r\n\t\tconst state: FileState = this.store.getValue();\r\n\t\tif (state.currentPage >= state.totalPages){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.store.update({\r\n\t\t\tcurrentPage: state.currentPage + 1,\r\n\t\t})\r\n\t\tawait this.getFiles();\r\n\t}\r\n\r\n\tasync getPreviousPage() {\r\n\t\tconst state: FileState = this.store.getValue();\r\n\t\tif (state.currentPage <= 1){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.store.update({\r\n\t\t\tcurrentPage: state.currentPage - 1,\r\n\t\t})\r\n\t\tawait this.getFiles();\r\n\t}\r\n\r\n\tasync uploadFile(file: File) {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\t\tconst userState = this.userStore.getValue();\r\n\t\tconst fileState = this.store.getValue();\r\n\r\n\t\ttry {\r\n\t\t\tlet res: AxiosResponse;\r\n\t\t\ttry {\r\n\t\t\t\tlet formData = new FormData();\r\n\t\t\t\tformData.append(\"file\", file);\r\n\r\n\t\t\t\tres = await axios.post(\r\n\t\t\t\t\t`${API_URL}/file/upload`,\r\n\t\t\t\t\tformData,\r\n\t\t\t\t\t{ \r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t\t\t\t\"Authorization\": userState.api_key,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonUploadProgress: (prog) => {\r\n\t\t\t\t\t\t\tconst percentage = Math.round(prog.loaded / prog.total * 100);\r\n\t\t\t\t\t\t\tthis.store.update({\r\n\t\t\t\t\t\t\t\tuploadProgress: percentage,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconst axErr: AxiosError = err;\r\n\t\t\t\tif (axErr.response){\r\n\t\t\t\t\tres = axErr.response;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"Request failed\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (res.status === 200){\r\n\t\t\t\tthis.store.update({\r\n\t\t\t\t\tuploadProgress: 0,\r\n\t\t\t\t\trecentlyUploaded: [\r\n\t\t\t\t\t\t...(fileState.recentlyUploaded ?? []),\r\n\t\t\t\t\t\tres.data,\r\n\t\t\t\t\t]\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.store.setError(res.data);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.store.setError(e.message);\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n}\r\n\r\nexport const fileService = new FileService(fileStore, userStore);\r\n","import { UserStore, userStore } from \"./user.store\";\r\nimport { PasswordUpdate, User, UserLogin, UserRegister } from \"./user.model\";\r\nimport { SendRequest } from \"../Request\";\r\n\r\nexport class UserService {\r\n\tconstructor(private store: UserStore) {}\r\n\r\n\tasync login(data: UserLogin) {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\t\tthis.store.update({message: undefined});\r\n\r\n\t\ttry{\r\n\t\t\tconst res = await SendRequest<User>(\"user/login\", \"POST\", data);\r\n\t\t\tif (res.status === 200){\r\n\t\t\t\tthis.store.update({...res.json});\r\n\t\t\t} else {\r\n\t\t\t\tthis.store.setError(\"Invalid username or password.\");\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.store.setError(e.message);\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n\r\n\tasync register(data: UserRegister) {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await SendRequest<User>(\"user/register\", \"POST\", data);\r\n\t\t\tif (res.status === 200){\r\n\t\t\t\tthis.store.update({...res.json});\r\n\t\t\t} else {\r\n\t\t\t\tthis.store.setError(res.error);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.store.setError(e.message);\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tthis.store.update({\r\n\t\t\tid: undefined,\r\n\t\t\tusername: undefined,\r\n\t\t\temail: undefined,\r\n\t\t\tapi_key: undefined,\r\n\t\t\tis_admin: undefined,\r\n\t\t\tlast_update: undefined,\r\n\t\t\tcreated_at: undefined,\r\n\t\t\tmessage: undefined,\r\n\t\t});\r\n\t}\r\n\r\n\tasync changePassword(data: PasswordUpdate) {\r\n\t\tthis.store.setLoading(true);\r\n\t\tthis.store.setError(\"\");\r\n\t\tthis.store.update({message: undefined});\r\n\t\tconst state = this.store.getValue();\r\n\r\n\t\ttry{\r\n\t\t\tconst res = await SendRequest<PasswordUpdate>(\"user/change-password\", \"POST\", data, [state.id.toString()]);\r\n\t\t\tif (res.status === 200){\r\n\t\t\t\tthis.store.update({\r\n\t\t\t\t\tmessage: \"Successfully updated password\",\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.store.setError(res.error);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.store.setError(e.message);\r\n\t\t}\r\n\r\n\t\tthis.store.setLoading(false);\r\n\t}\r\n}\r\n\r\nexport const userService = new UserService(userStore);\r\n","import { useEffect, useState } from \"react\";\r\nimport { User } from \"./user.model\";\r\nimport { userQuery } from \"./user.query\";\r\n\r\nexport const useAuthenticationState = (): {\r\n\terror: string;\r\n\tisLoading: boolean;\r\n\tisLoggedIn: boolean;\r\n\tuser: User | undefined;\r\n} => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [user, setUser] = useState<User>();\r\n\tconst [loggedIn, setLoggedIn] = useState<boolean>(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst subscriptions: any[] = [\r\n\t\t\tuserQuery.isLoading$.subscribe((x) => setIsLoading(x)),\r\n\t\t\tuserQuery.error$.subscribe((x) => setError(x)),\r\n\t\t\tuserQuery.user$.subscribe((x) => setUser(x)),\r\n\t\t\tuserQuery.isLoggedIn$.subscribe((x) => setLoggedIn(x)),\r\n\t\t];\r\n\r\n\t\treturn () => {\r\n\t\t\tsubscriptions.map((it) => it.unsubscribe());\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn {\r\n\t\tisLoggedIn: loggedIn,\r\n\t\tuser,\r\n\t\terror,\r\n\t\tisLoading,\r\n\t};\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { settingsQuery } from \"./settings.query\";\r\nimport { settingsService } from \"./settings.service\";\r\n\r\nexport const useSettings = (): {\r\n\tregister_enabled: boolean;\r\n\tmax_file_size_bytes: number;\r\n\terror: string;\r\n\tisLoading: boolean;\r\n} => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [registerEnabled, setRegisterEnabled] = useState<boolean>(false);\r\n\tconst [maxFileSizeBytes, setMaxFileSizeBytes] = useState<number>(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tsettingsService.fetchSettings();\r\n\r\n\t\tconst subscriptions: any[] = [\r\n\t\t\tsettingsQuery.isLoading$.subscribe((x) => setIsLoading(x)),\r\n\t\t\tsettingsQuery.error$.subscribe((x) => setError(x)),\r\n\t\t\tsettingsQuery.registerEnabled$.subscribe((x) => setRegisterEnabled(x)),\r\n\t\t\tsettingsQuery.maxFileSizeBytes$.subscribe((x) => setMaxFileSizeBytes(x)),\r\n\t\t];\r\n\r\n\t\treturn () => {\r\n\t\t\tsubscriptions.map((it) => it.unsubscribe());\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn {\r\n\t\tregister_enabled: registerEnabled,\r\n\t\tmax_file_size_bytes: maxFileSizeBytes,\r\n\t\terror,\r\n\t\tisLoading,\r\n\t};\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAuthenticationState } from \"../user\";\r\nimport { File } from \"./file.model\";\r\nimport { fileQuery } from \"./file.query\";\r\nimport { fileService } from \"./file.service\";\r\n\r\nexport const useFileState = (): {\r\n\terror: string;\r\n\tisLoading: boolean;\r\n\tfiles: File[],\r\n\trecentlyUploaded: string[];\r\n\tuploadProgress: number;\r\n\tcurrentPage: number,\r\n\ttotalPages: number,\r\n} => {\r\n\tconst { isLoggedIn } = useAuthenticationState();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [files, setFiles] = useState<File[]>([]);\r\n\tconst [recentlyUploaded, setRecentlyUploaded] = useState<string[]>([]);\r\n\tconst [uploadProgress, setUploadProgress] = useState(0);\r\n\tconst [currentPage, setCurrentPage] = useState<number>(1);\r\n\tconst [totalPages, setTotalPages] = useState<number>(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoggedIn){\r\n\t\t\tfileService.getFiles();\r\n\t\t}\r\n\r\n\t\tconst subscriptions: any[] = [\r\n\t\t\tfileQuery.isLoading$.subscribe((x) => setIsLoading(x)),\r\n\t\t\tfileQuery.error$.subscribe((x) => setError(x)),\r\n\t\t\tfileQuery.files$.subscribe((x) => setFiles(x ?? [])),\r\n\t\t\tfileQuery.recentlyUploaded$.subscribe((x) => setRecentlyUploaded(x ?? [])),\r\n\t\t\tfileQuery.uploadProgress$.subscribe((x) => setUploadProgress(x ?? 0)),\r\n\t\t\tfileQuery.currentPage$.subscribe((x) => setCurrentPage(x)),\r\n\t\t\tfileQuery.totalPages$.subscribe((x) => setTotalPages(x)),\r\n\t\t];\r\n\r\n\t\treturn () => {\r\n\t\t\tsubscriptions.map((it) => it.unsubscribe());\r\n\t\t};\r\n\t}, [isLoggedIn]);\r\n\r\n\treturn {\r\n\t\terror,\r\n\t\tisLoading,\r\n\t\tfiles,\r\n\t\trecentlyUploaded,\r\n\t\tuploadProgress,\r\n\t\tcurrentPage,\r\n\t\ttotalPages,\r\n\t};\r\n};\r\n","export * from \"./settings.model\";\r\nexport * from \"./settings.query\";\r\nexport * from \"./settings.service\";\r\nexport * from \"./settings.hooks\";\r\nexport { SettingsStore } from \"./settings.store\";\r\n","export * from \"./user.model\";\r\nexport * from \"./user.query\";\r\nexport * from \"./user.service\";\r\nexport * from \"./user.hooks\";\r\nexport { UserStore } from \"./user.store\";\r\n"],"sourceRoot":""}